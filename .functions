# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$@"
}

# Create a data URL from a file
function dataurl() {
    local mimeType=$(file -b --mime-type "$1")
    if [[ $mimeType == text/* ]]; then
        mimeType="${mimeType};charset=utf-8"
    fi
    echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')"
}

# Start a PHP 5.4+ server from a directory, optionally specifying the port
function phpserver() {
    local port="${1:-4000}"
    local ip=$(ipconfig getifaddr en1)
    sleep 1 && open "http://${ip}:${port}/" &
    php -S "${ip}:${port}"
}

# Extract archives - use: extract <file>
# Credits to http://dotfiles.org/~pseup/.bashrc
function extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2) tar xjf $1 ;;
            *.tar.gz) tar xzf $1 ;;
            *.bz2) bunzip2 $1 ;;
            *.rar) rar x $1 ;;
            *.gz) gunzip $1 ;;
            *.tar) tar xf $1 ;;
            *.tbz2) tar xjf $1 ;;
            *.tgz) tar xzf $1 ;;
            *.zip) unzip $1 ;;
            *.Z) uncompress $1 ;;
            *.7z) 7z x $1 ;;
            *) echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# All the dig info
function digga() {
    dig +nocmd "$1" any +multiline +noall +answer
}

# Legacy git-svn stuff
function svnmerge() {
    svnid=$(echo "$1" | tr -d r)
    gitid=$(git --no-pager log --all --format="%H" --grep "@$svnid" | tail -n 1)
    if [ -n "$gitid" ]
    then
        frombranch=$(git --no-pager log -1 --format="%b" "$gitid" | grep -Eo "[^/]+@" | tr -d '@')
        tobranch=$(git symbolic-ref HEAD | grep -Eo "[^/]+$")

        mergefile=`git rev-parse --git-dir`/MERGE_MSG
        if [ -e "$mergefile" ]
        then
            oldmessage=$(cat $mergefile)
            oldticket=$(grep -Eo '#[0-9]+' $mergefile | head -n 1)
        else
            oldmessage=""
            oldticket=""
        fi

        echo "Merging svn:$svnid - git:$gitid"
        echo "$frombranch -> $tobranch"
        git cherry-pick -n "$gitid"

        if ! [ -e "$mergefile" ]
        then
            echo "Nothing to do"
            return
        fi

        newmessage=$(cat $mergefile)
        newticket=$(grep -Eo '#[0-9]+' $mergefile | head -n 1)

        if [ -n "$oldticket" ] && [ "$newticket" != "$oldticket" ]
        then
            echo "WARNING: not the same ticket!"
        fi

        if ! (echo "$oldmessage" | grep -q "merge to $tobranch")
        then
            newmessage="($newticket) merge to $tobranch"
        else
            newmessage=$oldmessage
        fi

        newmessage="$newmessage r$svnid"

        echo $newmessage >| $mergefile
        echo $newmessage

    else
        echo "Changeset $svnid not found in git repository"
    fi
}

function svncommit() {
    branch=$(git name-rev --name-only HEAD)
    if [ "refs/remotes/$branch" != $(git config branch.$branch.merge) ]; then
        echo "Error: commit prevented, bad upstream branch."
        return 1
    fi
    git svn dcommit
}

function svn-hash() {
    git log -a --pretty=format:%H --grep @$1
}


# Notice text
function notice { echo "${GREEN}$1"; }

# Error text
function error { echo "${MAGENTA}Error: $1"; }

# List item
function c_list { echo " ${GREEN}✔ $1"; }

# Error list item
function e_list { echo " ${MAGENTA}✖ $1"; }
